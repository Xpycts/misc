1) Нужно написать функцию, которая в качестве аргумента принимала строчку, например
“abcdfg”, а возвращала строчку наоборот, например “gfdbca”.

Такая функция уже есть в базовом функционале PHP - strrev. Но я напишу еще пару вариантов

$str="abcdfg";

function revert($str){
    $rev_str="";
    for($i=strlen($str)-1;$i>=0;$i--)
        $rev_str.=$str[$i];
    return $rev_str;
}


2) Нужно написать код, который бы выводил (в браузер/в консоль) числа от 1 до 100.
Каждое число на новой строке.
При этом:
● Если число делится на 3, то вместо числа выводить “Три”
● Если число делится на 5, то вместо числа выводить “Пять”
● Если число делится на 3 и 5, то вместо числа выводить “ТриПять”
3) Есть сайт платных статей, со своей базой пользователей (customer: id, email), которым
ежедневно на электронную почту отправляются превью одной статьи (article: id, title,
teaser, text). Пользователь имеет возможность перейти по ссылке из письма и купить
полный доступ к статье.
Нужно спроектировать базу данных для сохранения и анализа статистики.
События которые требуется отслеживать:
● Отправка письма
● Открытие письма
● Переход по ссылке из письма
● Покупка статьи
Напишите SQL запрос который создает необходимую структуру данных.
4) Исходя из решения задачи номер 3, напишите SQL запросы к БД:
1. Выбрать самых покупающих пользователей по соотношению отправили/купили
2. Выбрать самую популярную статью по покупкам по соотношению отправили/купили
3. Выбрать пользователей, которые открывают письма чаще других
4. Выбрать пользователей, которые никогда не покупали статей
5. Выбрать пользователей, которые купили больше 5 статей
6. Выбрать пользователей, которые купили статьи с id = 3 и 4
7. Выбрать статью, по которой чаще всех переходят по соотношению
отправили/перешли
8. Выбрать статью, которую больше всех купили (всего)
5) Есть код:

class a {
    public $subClasses = array();
    public function __construct(){
        $this->subClasses = func_get_args();
    }
}

class b extends a {}

$list = new a(
    new a(
        new a(
            new b(),
            new a(
                new b(),
                new a()
            )
        ),
        new b(
            new a(
                new b (
                    new a (
                        new b(),
                        new b()
                    ),
                    new a(),
                    new a(),
                    new a()
                )
            )
        )
    )
);

Требуется написать функцию, которая бы принимала в качестве аргумента ­ переменную
с экземпляром класса a, а в качестве выходного значения возвращала бы количество
экземпляров класса b, которые содержаться в этом аргументе.

